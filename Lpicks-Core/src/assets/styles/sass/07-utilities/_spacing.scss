// Margin auto (for all screen sizes - no scope using media queries)
// ==========================================================================
$size: 'auto';

.kx-mx--#{$size} { @include mx($size); }
.kx-ml--#{$size} { @include ml($size); }
.kx-mr--#{$size} { @include mr($size); }
.kx-mt--auto { margin-top: auto; }
.kx-mb--auto { margin-bottom: auto; }

.kx-my--auto {
    margin-top: auto;
    margin-bottom: auto;
}

@each $size, $units in $spacing-sizes {
    // Margin sizes (for all screen sizes - no scoping media queries)
    // ==========================================================================
    .kx-m--#{$size} { @include m($size); }
    .kx-mx--#{$size} { @include mx($size); }
    .kx-my--#{$size} { @include my($size); }
    .kx-ml--#{$size} { @include ml($size); }
    .kx-mt--#{$size} { @include mt($size); }
    .kx-mr--#{$size} { @include mr($size); }
    .kx-mb--#{$size} { @include mb($size); }

    // Padding sizes (for all screen sizes - no scoping media queries)
    // ==========================================================================
    .kx-p--#{$size} { @include p($size); }
    .kx-px--#{$size} { @include px($size); }
    .kx-py--#{$size} { @include py($size); }
    .kx-pl--#{$size} { @include pl($size); }
    .kx-pt--#{$size} { @include pt($size); }
    .kx-pr--#{$size} { @include pr($size); }
    .kx-pb--#{$size} { @include pb($size); }
}

// Create a new sass-map based on $mq-breakpoints excluding the key 'all'.
// This way we only generate scoped classes inside media queries.
// ==========================================================================
$stipped-mq-breakpoints: map-remove($mq-breakpoints, (all));

@each $mq, $units in $stipped-mq-breakpoints {
    @include mq($mq) {
        $size: 'auto';

        .kx-mx--#{$size}\@#{$mq} { @include mx($size); }
        .kx-ml--#{$size}\@#{$mq} { @include ml($size); }
        .kx-mr--#{$size}\@#{$mq} { @include mr($size); }
        .kx-mt--auto\@#{$mq} { margin-top: auto; }
        .kx-mb--auto\@#{$mq} { margin-bottom: auto;}

        .kx-my--auto\@#{$mq} {
            margin-top: auto;
            margin-bottom: auto;
        }

        @each $size, $units in $spacing-sizes {
            // Margin sizes (scoped inside media queries)
            // ==========================================================================
            .kx-m--#{$size}\@#{$mq} { @include m($size); }
            .kx-mx--#{$size}\@#{$mq} { @include mx($size); }
            .kx-my--#{$size}\@#{$mq} { @include my($size); }
            .kx-ml--#{$size}\@#{$mq} { @include ml($size); }
            .kx-mt--#{$size}\@#{$mq} { @include mt($size); }
            .kx-mr--#{$size}\@#{$mq} { @include mr($size); }
            .kx-mb--#{$size}\@#{$mq} { @include mb($size); }

            // Padding sizes (scoped inside media queries)
            // ==========================================================================
            .kx-p--#{$size}\@#{$mq} { @include p($size); }
            .kx-px--#{$size}\@#{$mq} { @include px($size); }
            .kx-py--#{$size}\@#{$mq} { @include py($size); }
            .kx-pl--#{$size}\@#{$mq} { @include pl($size); }
            .kx-pt--#{$size}\@#{$mq} { @include pt($size); }
            .kx-pr--#{$size}\@#{$mq} { @include pr($size); }
            .kx-pb--#{$size}\@#{$mq} { @include pb($size); }
        }
    }
}

[class*=kx-m--] {
    transition: margin $duration-default ease;
}

[class*=kx-p--] {
    transition: padding $duration-default ease;
}
